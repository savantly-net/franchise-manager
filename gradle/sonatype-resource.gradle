ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
ext.doSign = project.hasProperty('doSign') ? project.doSign : false
ext.ossrhUsername = System.getenv('OSSRH_USER') ? System.getenv('OSSRH_USER') : (project.hasProperty('ossrhUsername') ? project.ossrhUsername : '')
ext.ossrhPassword = System.getenv('OSSRH_USER_TOKEN') ? System.getenv('OSSRH_USER_TOKEN') : (project.hasProperty('ossrhPassword') ? project.ossrhPassword : '')

signing {
	required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") && doSign }
    useGpgCmd()
    sign configurations.archives
}

// try using the publishing goal
publishing {
  repositories {
    maven {
      name = "OSSRH"
      url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      credentials {
        username = ossrhUsername
        password = ossrhPassword
      }
    }
    /*
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/savantly-net/sprout-platform"
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    } */
  }
}


// Build, sign, and upload
uploadArchives {
	dependsOn build
    repositories {
        mavenDeployer {

            // Sign POM
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            // Destination
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            // Add required metadata to POM
            pom.project {
                name project.name
                packaging 'jar'
                description project.description
                url 'https://github.com/savantly-net/franchise-manager'

                scm {
                    connection 'scm:git:ssh://github.com/savantly-net/franchise-manager.git'
                    developerConnection 'scm:git:ssh://github.com/savantly-net/franchise-manager.git'
                    url 'https://github.com/savantly-net/franchise-manager/tree/main'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        name 'Jeremy Branham'
                        email 'Jeremy@Savantly.net'
                        organization {
                        	name 'savantly.net'
                        	url 'http://savantly.net'
                        }
                        organizationUrl 'https://github.com/savantly-net/'
                    }
                }
            }
        }
    }
}
