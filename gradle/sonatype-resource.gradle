ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
ext.doSign = project.hasProperty('doSign') ? project.doSign : false
ext.ossrhUsername = System.getenv('OSSRH_USER') ? System.getenv('OSSRH_USER') : (project.hasProperty('ossrhUsername') ? project.ossrhUsername : '')
ext.ossrhPassword = System.getenv('OSSRH_USER_TOKEN') ? System.getenv('OSSRH_USER_TOKEN') : (project.hasProperty('ossrhPassword') ? project.ossrhPassword : '')

signing {
	required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") && doSign }
    useGpgCmd()
    sign configurations.archives
}


// Build, sign, and upload
publishing {
    publications {
      mavenJava(MavenPublication) {
          from components.java
          versionMapping {
              usage('java-api') {
                  fromResolutionOf('runtimeClasspath')
              }
              usage('java-runtime') {
                  fromResolutionResult()
              }
          }
          pom {
            name = 'Franchise Manager Module for Sprout'
            url = 'https://github.com/savantly-net/franchise-manager'

            /**  Why does this fail?
            licenses {
                license {
                    name 'The Apache License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }

            developers {
                developer {
                    id = 'jb'
                    name 'Jeremy Branham'
                    email 'Jeremy@Savantly.net'
                    organization {
                      name 'savantly.net'
                      url 'http://savantly.net'
                    }
                }
            }
            scm {
                connection 'scm:git:ssh://github.com/savantly-net/franchise-manager.git'
                developerConnection 'scm:git:ssh://github.com/savantly-net/franchise-manager.git'
                url 'https://github.com/savantly-net/franchise-manager/tree/main'
            }
            */
          }
      }
  }
  repositories {
    maven {
      name = "OSSRH"
      credentials {
        username = ossrhUsername
        password = ossrhPassword
      }
      def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
      url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
    }
    /*
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/savantly-net/sprout-platform"
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    } */
  }
}

// Sign POM - how to do?
// beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
